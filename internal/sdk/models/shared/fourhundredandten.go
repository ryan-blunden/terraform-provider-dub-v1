// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// FourHundredAndTenCode - A short code indicating the error code returned.
type FourHundredAndTenCode string

const (
	FourHundredAndTenCodeInviteExpired FourHundredAndTenCode = "invite_expired"
)

func (e FourHundredAndTenCode) ToPointer() *FourHundredAndTenCode {
	return &e
}
func (e *FourHundredAndTenCode) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "invite_expired":
		*e = FourHundredAndTenCode(v)
		return nil
	default:
		return fmt.Errorf("invalid value for FourHundredAndTenCode: %v", v)
	}
}

type FourHundredAndTenError struct {
	// A short code indicating the error code returned.
	Code FourHundredAndTenCode `json:"code"`
	// A human readable explanation of what went wrong.
	Message string `json:"message"`
	// A link to our documentation with more details about this error code
	DocURL *string `json:"doc_url,omitempty"`
}

func (o *FourHundredAndTenError) GetCode() FourHundredAndTenCode {
	if o == nil {
		return FourHundredAndTenCode("")
	}
	return o.Code
}

func (o *FourHundredAndTenError) GetMessage() string {
	if o == nil {
		return ""
	}
	return o.Message
}

func (o *FourHundredAndTenError) GetDocURL() *string {
	if o == nil {
		return nil
	}
	return o.DocURL
}

// FourHundredAndTen - This response is sent when the requested content has been permanently deleted from server, with no forwarding address.
type FourHundredAndTen struct {
	Error FourHundredAndTenError `json:"error"`
}

func (o *FourHundredAndTen) GetError() FourHundredAndTenError {
	if o == nil {
		return FourHundredAndTenError{}
	}
	return o.Error
}
