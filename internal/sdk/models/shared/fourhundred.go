// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// FourHundredCode - A short code indicating the error code returned.
type FourHundredCode string

const (
	FourHundredCodeBadRequest FourHundredCode = "bad_request"
)

func (e FourHundredCode) ToPointer() *FourHundredCode {
	return &e
}
func (e *FourHundredCode) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "bad_request":
		*e = FourHundredCode(v)
		return nil
	default:
		return fmt.Errorf("invalid value for FourHundredCode: %v", v)
	}
}

type FourHundredError struct {
	// A short code indicating the error code returned.
	Code FourHundredCode `json:"code"`
	// A human readable explanation of what went wrong.
	Message string `json:"message"`
	// A link to our documentation with more details about this error code
	DocURL *string `json:"doc_url,omitempty"`
}

func (o *FourHundredError) GetCode() FourHundredCode {
	if o == nil {
		return FourHundredCode("")
	}
	return o.Code
}

func (o *FourHundredError) GetMessage() string {
	if o == nil {
		return ""
	}
	return o.Message
}

func (o *FourHundredError) GetDocURL() *string {
	if o == nil {
		return nil
	}
	return o.DocURL
}

// FourHundred - The server cannot or will not process the request due to something that is perceived to be a client error (e.g., malformed request syntax, invalid request message framing, or deceptive request routing).
type FourHundred struct {
	Error FourHundredError `json:"error"`
}

func (o *FourHundred) GetError() FourHundredError {
	if o == nil {
		return FourHundredError{}
	}
	return o.Error
}
