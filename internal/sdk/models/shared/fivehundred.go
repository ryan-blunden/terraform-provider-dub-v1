// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// FiveHundredCode - A short code indicating the error code returned.
type FiveHundredCode string

const (
	FiveHundredCodeInternalServerError FiveHundredCode = "internal_server_error"
)

func (e FiveHundredCode) ToPointer() *FiveHundredCode {
	return &e
}
func (e *FiveHundredCode) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "internal_server_error":
		*e = FiveHundredCode(v)
		return nil
	default:
		return fmt.Errorf("invalid value for FiveHundredCode: %v", v)
	}
}

type FiveHundredError struct {
	// A short code indicating the error code returned.
	Code FiveHundredCode `json:"code"`
	// A human readable explanation of what went wrong.
	Message string `json:"message"`
	// A link to our documentation with more details about this error code
	DocURL *string `json:"doc_url,omitempty"`
}

func (o *FiveHundredError) GetCode() FiveHundredCode {
	if o == nil {
		return FiveHundredCode("")
	}
	return o.Code
}

func (o *FiveHundredError) GetMessage() string {
	if o == nil {
		return ""
	}
	return o.Message
}

func (o *FiveHundredError) GetDocURL() *string {
	if o == nil {
		return nil
	}
	return o.DocURL
}

// FiveHundred - The server has encountered a situation it does not know how to handle.
type FiveHundred struct {
	Error FiveHundredError `json:"error"`
}

func (o *FiveHundred) GetError() FiveHundredError {
	if o == nil {
		return FiveHundredError{}
	}
	return o.Error
}
