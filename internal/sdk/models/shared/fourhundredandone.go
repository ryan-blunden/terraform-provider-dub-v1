// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// FourHundredAndOneCode - A short code indicating the error code returned.
type FourHundredAndOneCode string

const (
	FourHundredAndOneCodeUnauthorized FourHundredAndOneCode = "unauthorized"
)

func (e FourHundredAndOneCode) ToPointer() *FourHundredAndOneCode {
	return &e
}
func (e *FourHundredAndOneCode) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "unauthorized":
		*e = FourHundredAndOneCode(v)
		return nil
	default:
		return fmt.Errorf("invalid value for FourHundredAndOneCode: %v", v)
	}
}

type FourHundredAndOneError struct {
	// A short code indicating the error code returned.
	Code FourHundredAndOneCode `json:"code"`
	// A human readable explanation of what went wrong.
	Message string `json:"message"`
	// A link to our documentation with more details about this error code
	DocURL *string `json:"doc_url,omitempty"`
}

func (o *FourHundredAndOneError) GetCode() FourHundredAndOneCode {
	if o == nil {
		return FourHundredAndOneCode("")
	}
	return o.Code
}

func (o *FourHundredAndOneError) GetMessage() string {
	if o == nil {
		return ""
	}
	return o.Message
}

func (o *FourHundredAndOneError) GetDocURL() *string {
	if o == nil {
		return nil
	}
	return o.DocURL
}

// FourHundredAndOne - Although the HTTP standard specifies "unauthorized", semantically this response means "unauthenticated". That is, the client must authenticate itself to get the requested response.
type FourHundredAndOne struct {
	Error FourHundredAndOneError `json:"error"`
}

func (o *FourHundredAndOne) GetError() FourHundredAndOneError {
	if o == nil {
		return FourHundredAndOneError{}
	}
	return o.Error
}
