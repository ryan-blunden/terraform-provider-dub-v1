// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// FourHundredAndNineCode - A short code indicating the error code returned.
type FourHundredAndNineCode string

const (
	FourHundredAndNineCodeConflict FourHundredAndNineCode = "conflict"
)

func (e FourHundredAndNineCode) ToPointer() *FourHundredAndNineCode {
	return &e
}
func (e *FourHundredAndNineCode) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "conflict":
		*e = FourHundredAndNineCode(v)
		return nil
	default:
		return fmt.Errorf("invalid value for FourHundredAndNineCode: %v", v)
	}
}

type FourHundredAndNineError struct {
	// A short code indicating the error code returned.
	Code FourHundredAndNineCode `json:"code"`
	// A human readable explanation of what went wrong.
	Message string `json:"message"`
	// A link to our documentation with more details about this error code
	DocURL *string `json:"doc_url,omitempty"`
}

func (o *FourHundredAndNineError) GetCode() FourHundredAndNineCode {
	if o == nil {
		return FourHundredAndNineCode("")
	}
	return o.Code
}

func (o *FourHundredAndNineError) GetMessage() string {
	if o == nil {
		return ""
	}
	return o.Message
}

func (o *FourHundredAndNineError) GetDocURL() *string {
	if o == nil {
		return nil
	}
	return o.DocURL
}

// FourHundredAndNine - This response is sent when a request conflicts with the current state of the server.
type FourHundredAndNine struct {
	Error FourHundredAndNineError `json:"error"`
}

func (o *FourHundredAndNine) GetError() FourHundredAndNineError {
	if o == nil {
		return FourHundredAndNineError{}
	}
	return o.Error
}
