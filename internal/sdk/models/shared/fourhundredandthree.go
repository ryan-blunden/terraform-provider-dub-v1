// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// FourHundredAndThreeCode - A short code indicating the error code returned.
type FourHundredAndThreeCode string

const (
	FourHundredAndThreeCodeForbidden FourHundredAndThreeCode = "forbidden"
)

func (e FourHundredAndThreeCode) ToPointer() *FourHundredAndThreeCode {
	return &e
}
func (e *FourHundredAndThreeCode) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "forbidden":
		*e = FourHundredAndThreeCode(v)
		return nil
	default:
		return fmt.Errorf("invalid value for FourHundredAndThreeCode: %v", v)
	}
}

type FourHundredAndThreeError struct {
	// A short code indicating the error code returned.
	Code FourHundredAndThreeCode `json:"code"`
	// A human readable explanation of what went wrong.
	Message string `json:"message"`
	// A link to our documentation with more details about this error code
	DocURL *string `json:"doc_url,omitempty"`
}

func (o *FourHundredAndThreeError) GetCode() FourHundredAndThreeCode {
	if o == nil {
		return FourHundredAndThreeCode("")
	}
	return o.Code
}

func (o *FourHundredAndThreeError) GetMessage() string {
	if o == nil {
		return ""
	}
	return o.Message
}

func (o *FourHundredAndThreeError) GetDocURL() *string {
	if o == nil {
		return nil
	}
	return o.DocURL
}

// FourHundredAndThree - The client does not have access rights to the content; that is, it is unauthorized, so the server is refusing to give the requested resource. Unlike 401 Unauthorized, the client's identity is known to the server.
type FourHundredAndThree struct {
	Error FourHundredAndThreeError `json:"error"`
}

func (o *FourHundredAndThree) GetError() FourHundredAndThreeError {
	if o == nil {
		return FourHundredAndThreeError{}
	}
	return o.Error
}
