// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package provider

import (
	"context"
	"github.com/hashicorp/terraform-plugin-framework/diag"
	"github.com/hashicorp/terraform-plugin-framework/types"
	"github.com/speakeasy/terraform-provider-dub/internal/sdk/models/operations"
	"github.com/speakeasy/terraform-provider-dub/internal/sdk/models/shared"
)

func (r *TagDataSourceModel) ToOperationsGetTagsRequest(ctx context.Context) (*operations.GetTagsRequest, diag.Diagnostics) {
	var diags diag.Diagnostics

	sortBy := new(operations.SortBy)
	if !r.SortBy.IsUnknown() && !r.SortBy.IsNull() {
		*sortBy = operations.SortBy(r.SortBy.ValueString())
	} else {
		sortBy = nil
	}
	sortOrder := new(operations.SortOrder)
	if !r.SortOrder.IsUnknown() && !r.SortOrder.IsNull() {
		*sortOrder = operations.SortOrder(r.SortOrder.ValueString())
	} else {
		sortOrder = nil
	}
	search := new(string)
	if !r.Search.IsUnknown() && !r.Search.IsNull() {
		*search = r.Search.ValueString()
	} else {
		search = nil
	}
	page := new(float64)
	if !r.Page.IsUnknown() && !r.Page.IsNull() {
		*page = r.Page.ValueFloat64()
	} else {
		page = nil
	}
	pageSize := new(float64)
	if !r.PageSize.IsUnknown() && !r.PageSize.IsNull() {
		*pageSize = r.PageSize.ValueFloat64()
	} else {
		pageSize = nil
	}
	out := operations.GetTagsRequest{
		SortBy:    sortBy,
		SortOrder: sortOrder,
		Search:    search,
		Page:      page,
		PageSize:  pageSize,
	}

	return &out, diags
}

func (r *TagDataSourceModel) RefreshFromSharedTagSchema(ctx context.Context, resp *shared.TagSchema) diag.Diagnostics {
	var diags diag.Diagnostics

	r.Color = types.StringValue(string(resp.Color))
	r.ID = types.StringValue(resp.ID)
	r.Name = types.StringValue(resp.Name)

	return diags
}
